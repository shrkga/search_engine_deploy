stages:
  - test
  - staging
  - prod

.extended_deploy:
  image: dtzar/helm-kubectl:3.13
  variables:
    KUBE_CONTEXT: ${CI_PROJECT_PATH}:yc-k8s
    name: ${CI_ENVIRONMENT_SLUG}
    host: ${name}.${CI_PAGES_DOMAIN}
    reg: ${CI_REGISTRY}/otus
    repo: https://${CI_SERVER_HOST}/otus
  before_script:
    # ensuring namespace
    - kubectl config get-contexts
    - kubectl config use-context ${KUBE_CONTEXT}
    - kubectl describe namespace "${KUBE_NAMESPACE}" || kubectl create namespace "${KUBE_NAMESPACE}"
    - >
      function deploy() {
        mkdir -p search-engine/chats
        helm dep build search-engine
        echo "Deploy helm release $name to $KUBE_NAMESPACE"

        for HCMD in 'helm template' 'helm upgrade --install --wait --atomic'
        do
          ${HCMD} \
            --set ui.ingress.host="$host" \
            --set ui.image.repository=${reg}/search_engine_ui \
            --set ui.image.tag="$(curl -fsSL ${repo}/search_engine_ui/raw/main/VERSION)" \
            --set crawler.image.repository=${reg}/search_engine_crawler \
            --set crawler.image.tag="$(curl -fsSL ${repo}/search_engine_crawler/raw/main/VERSION)" \
            --namespace="$KUBE_NAMESPACE" --create-namespace \
            --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
            "$name" \
            search-engine/
        done
      }

test:
  stage: test
  variables:
    GIT_STRATEGY: none
  script:
    - env
    - exit 0
  only:
    - triggers
    - branches
  except:
    - main

staging:
  stage: staging
  variables:
    KUBE_NAMESPACE: staging
  extends: .extended_deploy
  environment:
    name: staging
    url: http://${host}
  script:
    - deploy
  only:
    refs:
      - main
  except:
    - triggers

prod:
  stage: prod
  variables:
    KUBE_NAMESPACE: prod
  extends: .extended_deploy
  environment:
    name: prod
    url: http://${host}
  script:
    - deploy
  when: manual
  only:
    refs:
      - main
  except:
    - triggers
